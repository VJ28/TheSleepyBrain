import { StaticRouter } from "react-router-dom";
import { renderToNodeStream } from "react-dom/server";
import path from "path";
import { ChunkExtractor } from "@loadable/server";
import React from "react";
import App from "../client/app.js";
// This is the stats file generated by webpack loadable plugin

const Render = (req, res, data = {}) => {
  // Render your application
  res.write(
    `<html><head><title>Test</title><meta charset="utf-8">
    <title>Webpack App</title>
    <meta name="viewport" content="width=device-width,initial-scale=1"/>
    <link rel="stylesheet" type="text/css" href="/bundle.css"/>
    <link href="https://fonts.googleapis.com/css2?family=Marcellus+SC&family=Roboto&display=swap" rel="stylesheet">
    <style>
        *{ 
            box-sizing: border-box;
            overflow: auto;
            margin:0;
            padding:0;
        }
        h1, h2, h3{
            font-family: "Marcellus SC", sans-serif;
        }
        ul{
          list-style: none;
      }
      section{
          padding: 20px;
          background-color: #4F4F4F;
          height: calc(100% - 48px);
      }
      a{
          text-decoration: none;
          color: unset;
      }
        div{
            font-family: Roboto, sans-serif;
        }
    </style><script>var data=JSON.parse('${JSON.stringify(
      data
    )}')</script></head><body><div id='root'>`
  );
  const statsFile = path.resolve("./dist/public/loadable-stats.json");
  const chunkExtractor = new ChunkExtractor({
    statsFile,
    entrypoints: ["app"],
  });
  const jsx = chunkExtractor.collectChunks(
    <StaticRouter location={req.url}>
      <App data={data} />
    </StaticRouter>
  );
  const stream = renderToNodeStream(jsx);
  // you'd then pipe the stream into the response object until it's done
  stream.pipe(res, { end: false });
  const scripts = chunkExtractor.getScriptTags({ async: false });
  // and finalize the response with closing HTML
  stream.on("end", () => res.end(`</div>${scripts}</body></html>`));
};

export default Render;
